#include <mpi.h>
#include <stdio.h>

int main(int argc, char **arvg) {
  MPI_Init(NULL,NULL);
  int world_size, world_rank;
  MPI_Comm_size(MPI_COMM_WORLD, &world_size);
  MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);
  char processor_name(MPI_MAX_PROCESSOR_NAME);
  int name_len;
  MPI_Get_processor_name(processor_name, &name_len);
#ifdef INTEL_MPI_PCONTROL
 MPI_Pcontrol(1,"FOM");
#elif defined(INTEL_MPITRACE)
 MPI_Pcontrol(0,"summary start");
#elif defined (INTEL_MPIP)
 MPI_Pcontrol(1);
#endif

  int i;
  i =  world_rank;
  MPI_Bcast(&i, 1, MPI_INT, 0, MPI_COMM_WORLD);
  printf("%d %d \n", i, world_rank);

#ifdef INTEL_MPI_PCONTROL
  MPI_Pcontrol(-1, "FOM");
#elif defined(INTEL_MPITRACE)
  MPI_Pcontrol(0, "summary stop");
#elif defined(INTEL_MPIP)
  MPI_Pcontrol(0);
#endif

  MPI_Finalize();
}

### How to compile
1) mpiP
CFLAGS = -O3 -DINTEL_MPIP
LIB = -L${UNWIND_ROOT)/lib -lunwind-x86_64 -L${MPIP_ROOT)/lib -lmpiP

2) Intel MPI tools
CFLAGS = -O3 -DINTEL_MPI_PCONTROL
